#!/bin/bash
################################################################################
# Logging functions
INFO(){ echo -n "INFO: "; echo "$@" ;}
WARN(){ echo -n "WARN: "; echo "$@" ;}
ERRO(){ echo -n "ERRO: "; echo -n "$@" ; echo " Abort!"; exit 1;}

################################################################################
# Check some deps
bin_exist(){ command -v "$1" &> /dev/null || ERRO "Missing ${1}!"; }
for bin in wine winetricks wineserver winepath wineboot; do
    bin_exist $bin
done

################################################################################
# Define useful functions
rm_w(){ [ -f "$1" ] && rm "$1"; }
dos2unix(){ sed $'s/\r$//'; }
unix2dos(){ sed $'s/$/\r/'; }

################################################################################
# Some vars
export PREFIXCOMMAND
export TMP
export BASE_DIR="$HOME/.local/share/leagueoflegends"
export LOL_OpenGL=2

export WINEPREFIX
export WINEARCH=win32
export WINEDLLOVERRIDES
export WINE_REQ_MOD=( corefonts vcrun2005 vcrun2008 d3dx9 )

export LOL_LAUNCHER_NAME="lol.launcher.exe"
export LOL_INSTALL_PATH
export LOL_LAUNCHER_RUN_LOG
export LOL_CLIENT_RUN_LOG
CONF=/etc/leagueoflegends.conf
TMP="$(mktemp -u)"

################################################################################
# Check args
case "$1" in
    launcher|client) : ;;
    winecfg|wineserver) : ;;
    reinstall|tail|make_wineprefix|regen_wine_prefix) : ;;
    cleanup_logs) : ;;
    *)
        echo "League of Legends Launcher wrapper/installer"
        echo "See $CONF"
        echo "Usage: $0 <args>"
        echo "  launcher           - launch lol launcher"
        echo "                       launcher can run old client"
        echo "  client             - launch lol beta client"
        echo "  winecfg            - run winecfg in lol prefix"
        echo "  wineserver <args>  - -k for killing all processes"
        echo "  reinstall          - reinstall lol launcher bins"
        echo "  tail               - tail -f to log file"
        echo "  make_wineprefix    - only make wineprefix"
        echo "  cleanup_logs       - remove log files in wine prefix"
        echo "  regen_wine_prefix  - backup LoL dir, recreate wineprefix"
        echo "                       move LoL back, use carefully"
        exit 1
    ;;
esac

################################################################################
# Initialization
# shellcheck source=leagueoflegends.conf
source "$CONF" &> /dev/null || ERRO "Missing: ${CONF}!"

WINEPREFIX="${WINEPREFIX:-$BASE_DIR/WINE.$WINEARCH}"
LOL_INSTALL_PATH="${LOL_INSTALL_PATH:-$BASE_DIR/LOL/}"
LOL_LAUNCHER_RUN_LOG="${LOL_LAUNCHER_RUN_LOG:-$WINEPREFIX/lol_launcher.log}"
LOL_CLIENT_RUN_LOG="${LOL_CLIENT_RUN_LOG:-$WINEPREFIX/lol_client.log}"

{
    INFO "Check: Base dir $BASE_DIR"
    mkdir -p "$BASE_DIR"
}

{
    INFO "Check: wineprefix exist $WINEPREFIX"
    if [ ! -d "$WINEPREFIX" ]; then
        INFO "Wine prefix not exist"
        INFO "So try recreate it"
        wineboot &> /dev/null
        INFO "Created: $WINEPREFIX"
    fi
    INFO "Last tested version: wine-1.9.24"
    INFO "Your version: $(wine --version)"
}

touch "$WINEPREFIX/winetricks.log"

{
    INFO "Check: wineprefix configured"
    for mod in "${WINE_REQ_MOD[@]}"; do
        [ -z "$mod" ] && continue
        if ! grep -q "$mod" "$WINEPREFIX/winetricks.log"; then
            winetricks -q "$mod" || ERRO "Something went wrong!"
        fi
    done
}

{
    INFO "Check: wine user dirs are private"
    find "$WINEPREFIX/drive_c/users/" -type l -exec rm -v {} \; -exec mkdir -pv {} \;
}

{
    INFO "Check: wine can access only to wine drive (C:/)"
    for link in "$WINEPREFIX/dosdevices"/*; do
        [[ "$link" =~ c: ]] && continue # For default link to ../drive_c
        [[ "$link" =~ x: ]] && continue # For link to LoL path
        rm -v "$link"
    done
}

touch "$LOL_LAUNCHER_RUN_LOG" "$LOL_CLIENT_RUN_LOG"

case "$1" in
    make_wineprefix) exit 0;;
    winecfg) winecfg; exit 0;;
    wineserver)
        shift;
        wineserver "$@"
        exit 0
    ;;
    cleanup_logs)
        find -H "$WINEPREFIX/drive_c/" -name "*.log" -delete -print
        find -H "$LOL_INSTALL_PATH/" -name "*.log?" -delete -print
        if [ -d "$LOL_INSTALL_PATH/Logs/" ]; then
            find -H "$LOL_INSTALL_PATH/Logs/" -type f -delete -print
            find -H "$LOL_INSTALL_PATH/Logs/" -empty -delete -print
        fi
        truncate -s 0 "$LOL_LAUNCHER_RUN_LOG" "$LOL_CLIENT_RUN_LOG"
        exit 0
    ;;
    tail)
        tail -f "$LOL_LAUNCHER_RUN_LOG" "$LOL_CLIENT_RUN_LOG"
        exit 0
    ;;
esac


reinstall(){
    INFO "Install launcher"
    gen_locale_cfg(){ echo locale = en_gb; }

    gen_system_cfg(){
        echo DownloadPath = /releases/live
        echo DownloadURL = l3cdn.riotgames.com
        echo Region = EUW
    }

    gen_launcher_cfg(){
        echo airConfigProject = lol_air_client_config_euw
        echo airProject = lol_air_client
        echo gameProject = lol_game_client_sln
    }

    URL_LAUNCHER="https://github.com/Nefelim4ag/League-Of-Legends/raw/master/lol.launcher.exe"
    URL_RADS="http://l3cdn.riotgames.com/releases/live/system/rads_user_kernel.exe"

    mkdir -p "$LOL_INSTALL_PATH/RADS/system/" || ERRO "Something went wrong!"
    {
        cd "$LOL_INSTALL_PATH" || exit 1
        wget -nv "$URL_LAUNCHER" -O "lol.launcher.exe"         || ERRO "Something went wrong!"
        {
            cd "RADS/system" || exit 1
            wget -nv "$URL_RADS"     -O "rads_user_kernel.exe" || ERRO "Something went wrong!"
            gen_locale_cfg   | unix2dos > "locale.cfg"         || ERRO "Something went wrong!"
            gen_system_cfg   | unix2dos > "system.cfg"         || ERRO "Something went wrong!"
            gen_launcher_cfg | unix2dos > "launcher.cfg"       || ERRO "Something went wrong!"
        }
    }
}

{
    INFO "Check: launcher installed"
    if [ ! -d "$LOL_INSTALL_PATH" ]; then
        INFO "League of Legends not found at: $LOL_INSTALL_PATH"
        INFO "Search for existing launcher"
        find -H "$BASE_DIR" -name "$LOL_LAUNCHER_NAME" > "$TMP"
        read -r LOL_LAUNCHER_PATH < "$TMP"

        if [ -f "$LOL_LAUNCHER_PATH" ]; then
            INFO "Find another League of Legends launcher, move it to $LOL_INSTALL_PATH"
            dirname "$LOL_LAUNCHER_PATH" > "$TMP"
            read -r LOL_DIR < "$TMP"
            mv -v "$LOL_DIR/" "$LOL_INSTALL_PATH/"
        else
            INFO "League of Legends not found at $BASE_DIR"
            INFO "Reinstall it"
            reinstall
        fi
        rm_w "$TMP"
    else
        INFO "League of Legends found at: $LOL_INSTALL_PATH"
    fi
}

{
    INFO "Check: Link X: -> $LOL_INSTALL_PATH"
    ln -sf "$LOL_INSTALL_PATH" "$WINEPREFIX/dosdevices/x:"
}

case "$1" in
    reinstall) reinstall; exit 0;;
    regen_wine_prefix)
        [ -d "${WINEPREFIX}.backup" ] && ERRO "Backup of ${WINEPREFIX} already exist"
        INFO "Backup prefix: ${WINEPREFIX}.backup"
        mv "${WINEPREFIX}" "${WINEPREFIX}.backup"
        INFO "Self rerun to recreate wineprefix"
        "$0" make_wineprefix
        exit 0
    ;;
esac

{
    INFO "Search DLLs in LoL"
    find "$LOL_INSTALL_PATH" -type f -name "*.dll" -exec basename {} \; | \
        grep .dll | \
        grep -v rcp-be | \
        sort -u > "$TMP"

    INFO "Found: $(wc -l < "$TMP") DLLs"
    INFO "Make DLLs override"
    while read -r dll; do
        WINEDLLOVERRIDES="$dll=n,b $WINEDLLOVERRIDES"
    done < "$TMP"
    WINEDLLOVERRIDES=${WINEDLLOVERRIDES// /;}
}

INFO "Initialization Finished"

# Configure OpenGL
configure_OpenGL(){
    [[ "$LOL_OpenGL" =~ 0|1 ]] || return

    Gcfg=$LOL_INSTALL_PATH/Config/game.cfg

    if [ ! -f "$Gcfg" ]; then
        INFO "Can't find: $Gcfg"
        INFO "Ignore OpenGL setting"
        return
    fi

    dos2unix > "$TMP" < "$Gcfg"

    if [[ "$LOL_OpenGL" == 0 ]] && grep -q x3d_platform=1 "$Gcfg"; then
        sed -i 's/x3d_platform=1//g' "$TMP"
        unix2dos > "$Gcfg" < "$TMP"
        INFO "Disable OpenGL in game.cfg"
    fi
    if [[ "$LOL_OpenGL" == 1 ]] && ! grep -q x3d_platform=1 "$Gcfg"; then
        sed -i 's/\[General\]/\[General\]\nx3d_platform=1/g' "$TMP"
        unix2dos > "$Gcfg" < "$TMP"
        INFO "Enable OpenGL in game.cfg"
    fi

    rm_w "$TMP"
}
configure_OpenGL

# Configure client to run by launcher
{
    Ucfg="$LOL_INSTALL_PATH"/RADS/system/user.cfg
    echo leagueClientOptIn = no  > "$Ucfg"
}

case "$1" in
    launcher)
        winepath -w "$LOL_INSTALL_PATH/$LOL_LAUNCHER_NAME" > "$TMP" 2> /dev/null

        read -r WINE_PATH < "$TMP"
        winepath -u "$WINE_PATH" > "$TMP" 2> /dev/null
        read -r UNIX_PATH < "$TMP"
        rm_w "$TMP"

        INFO "LoL Launcher UNIX path: $UNIX_PATH"
        INFO "LoL Launcher WINE path: $WINE_PATH"


        INFO "Run: $LOL_LAUNCHER_NAME"
        INFO "Wine run log: $LOL_LAUNCHER_RUN_LOG"
        $PREFIXCOMMAND wine "$WINE_PATH" "$LOL_LAUNCHER_ARGS" &>> "$LOL_LAUNCHER_RUN_LOG"
    ;;
    client)
        LOL_CLIENT_NAME="LeagueClient.exe"
        LOL_CLIENT_ARGS="--no-sandbox"
        find -H "$LOL_INSTALL_PATH" -name "$LOL_CLIENT_NAME" > "$TMP"
        read -r LOL_CLIENT_PATH < "$TMP"
        winepath -w "$LOL_CLIENT_PATH" > "$TMP" 2> /dev/null

        read -r WINE_PATH < "$TMP"
        winepath -u "$WINE_PATH" > "$TMP" 2> /dev/null
        read -r UNIX_PATH < "$TMP"
        rm_w "$TMP"

        INFO "LoL Client UNIX path: $UNIX_PATH"
        INFO "LoL Client WINE path: $WINE_PATH"

        INFO "Run: $LOL_CLIENT_NAME $LOL_CLIENT_ARGS"
        INFO "Wine run log: $LOL_CLIENT_RUN_LOG"
        $PREFIXCOMMAND wine "$WINE_PATH" "$LOL_CLIENT_ARGS" &>> "$LOL_CLIENT_RUN_LOG"
    ;;
esac
